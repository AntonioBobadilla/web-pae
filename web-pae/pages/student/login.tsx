/* eslint-disable jsx-a11y/alt-text */
/* eslint-disable react/function-component-definition */
import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import React, { useState } from 'react';
import { useForm, useFormState } from 'react-hook-form';
import ButtonTemplate from '../../components/button-template';
import { LoginData, loginDefaultValues } from '../../components/login-input';
import TextInput from '../../components/text-input';
import styles from '../../css/student/studentLogin.module.css';

const Login: NextPage = () => {
  const [isLoading, setIsLoading] = useState(false);
  const router = useRouter();
  const {
    control,
    handleSubmit,
    formState: { errors }
  } = useForm<LoginData>({ defaultValues: loginDefaultValues });

  const { isDirty } = useFormState({ control });

  const onSubmit = handleSubmit((data) => {
    setIsLoading(true);
    setTimeout(() => {
      setIsLoading(false);
      router.push('/student/home');
    }, 2000);
    // login(data.email, data.password);
  });

  const login = (email: string, password: string) => {
    //     fetch('http://localhost:8000/logintutee/', {
    //       method: 'POST',
    //       headers: { 'Content-Type': 'application/json' },
    //       body: JSON.stringify(obj)
    //     })
    //       .then((res) => res.status)
    //       .then((status) => {
    //         if (status === 200) {
    //           console.log('bien');
    //           router.push('/student/home');
    //         } else {
    //           setEmailError('usuario o contraseña incorrecto');
    //         }
    //       })
    //       .catch((err) => {
    //         // auto catches network / connection error
    //         console.log(err.message);
    //       });
  };

  // const handleSubmit = () => {
  //   setIsLoading(true);
  //   if (
  //     !validator.isEmpty(passwordInput) // &&
  //     // validator.isEmail(emailInput) &&
  //     // isTecEmail(emailInput)
  //   ) {
  //     const obj = { registration_number: emailInput, password: passwordInput };
  //     console.log(obj);
  //     fetch('http://localhost:8000/logintutee/', {
  //       method: 'POST',
  //       headers: { 'Content-Type': 'application/json' },
  //       body: JSON.stringify(obj)
  //     })
  //       .then((res) => res.status)
  //       .then((status) => {
  //         if (status === 200) {
  //           console.log('bien');
  //           router.push('/student/home');
  //         } else {
  //           setEmailError('usuario o contraseña incorrecto');
  //         }
  //       })
  //       .catch((err) => {
  //         // auto catches network / connection error
  //         console.log(err.message);
  //       });
  //   } else if (!validator.isEmail(emailInput)) {
  //     setEmailError('Email no válido');
  //     if (!validator.isEmpty(passwordInput)) {
  //       setPasswordError('');
  //     }
  //   }
  //   if (validator.isEmpty(passwordInput)) {
  //     setPasswordError('Por favor introduzca una contraseña');
  //     if (validator.isEmail(emailInput)) {
  //       setEmailError('');
  //     }
  //   }
  // };

  return (
    <div>
      <Head>
        <title>WEB PAE</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <form className={styles.mainContainer} onSubmit={onSubmit}>
          <div className={styles.leftCont}>
            <img
              src="/images/student-login-image.jpg"
              className={styles.loginImage}
            />
          </div>
          <div className={styles.signIn}>
            <div className={styles.paeLogin}>
              <img src="/images/pae-logo.png" className={styles.paeLogo} />
              <h1 className={styles.paeText}> PAE | LOGIN</h1>
            </div>
            <div className={styles.loginFields}>
              <div className={styles.component}>
                <TextInput
                  name="email"
                  placeholder="CORREO INSTITUCIONAL"
                  control={control}
                  error={errors.email}
                  rules={{
                    required: 'Correo eléctrónico requerido',
                    pattern: {
                      value: /^([A,a]{1}[0]{1}[0-9]{7}@tec\.mx)/i,
                      message:
                        'Correo eléctronico inválido. E.g. A0XXXXXXX@tec.mx'
                    }
                  }}
                />
              </div>
              <div className={styles.component}>
                <TextInput
                  name="password"
                  type="password"
                  placeholder="CONTRASEÑA"
                  control={control}
                  error={errors.password}
                  rules={{
                    required: 'Contraseña requerida',
                    minLength: { value: 8, message: 'Contraseña muy corta' }
                  }}
                />
              </div>
              <div className={styles.componentB}>
                <ButtonTemplate
                  variant="primary"
                  type="submit"
                  disabled={!isDirty || isLoading}
                  loading={isLoading}
                >
                  INICIAR SESION
                </ButtonTemplate>
              </div>
            </div>
            <div className={styles.notUser}>
              <Link href="/student/forgot-password">
                <a className={styles.forgotPassword}>Olvidé mi contraseña</a>
              </Link>
              <h2 className={styles.register}>
                ¿No tienes cuenta?{' '}
                <Link href="/register">
                  <a className={styles.regLink}>Regístrate</a>
                </Link>
              </h2>
              <a href="#" className={styles.privacy}>
                Aviso de privacidad
              </a>
            </div>
          </div>
        </form>
      </main>
    </div>
  );
};

export default Login;
